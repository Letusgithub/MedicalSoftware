<%- include('../partials/headercode.ejs') %>

  <body>

    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar  ">
      <div class="layout-container">

        <!-- sidebar imported -->
        <%- include('../partials/sidebar.ejs') %>


          <!-- Layout container -->
          <div class="layout-page">

            <!-- navbar imported -->
            <%- include('../partials/navbar.ejs') %>

              <!-- Content wrapper -->
              <div class="content-wrapper">


                <!-- Content -->

                <div class="container-xxl flex-grow-1 container-p-y">
                  <h4 class="fw-bold py-3 mb-1"> Sale Invoice</h4>
                  <hr class="mb-4">
                  <form>
                    <div class="row">

                      <tr>
                        <th>
                          <div class="col-md-6">
                            <div class="card mb-4">
                              <h5 class="card-header">Customer Mobile<span style="font-size: 20px; color: red">*</span>
                              </h5>
                              <div class="card-body">
                                <div>

                                  <input type="text" class="form-control" id="phonenumber"
                                    placeholder="Enter 10-digit number" maxLength="10" />

                                </div>
                              </div>
                            </div>
                          </div>
                        </th>

                        <th>

                          <div class="col-md-6">

                            <div class="card mb-4">
                              <div class="d-flex justify-content-between m-0 p-0">
                                <h5 class="card-header">Customer Name <span style="font-size: 20px; color: red">*</span>
                                </h5>
                              </div>
                              <div class="card-body pt-0">
                                <div>

                                  <input type="text" class="form-control" id="customername"
                                    placeholder="Enter customer name" />

                                </div>
                              </div>

                            </div>
                          </div>
                        </th>

                      </tr>
                    </div>

                  </form>
                </div>
              </div>

              <div class="row mx-3">
                <h4 class="fw-bold mb-2">Add Items</h4>

                <div id="message" class="d-flex justify-content-between mb-2"></div>


                <!-- Bordered Table -->
                <div class="bordered-table card mb-4 mx-0">

                  <form class="form-main">
                    <div class="card-body form-block">
                      <div class="table-responsive text-nowrap ">

                        <table class="table table-bordered">
                          <thead>
                            <tr>
                              <th class="col-6">Product Name*</th>
                              <th class="col-5">Mfg / Mkt</th>
                              <th class="col-1">Shelf Label</th>
                            </tr>

                          </thead>
                          <tbody>
                            <tr>
                              <td>
                                <input type="text" class="form-control" id="medicinename" placeholder="Medicine Name" />
                              </td>
                              <td>
                                <input type="text" class="form-control" id="brand" placeholder="Brand Name" />
                              </td>
                              <td>
                                <input type="text" class="form-control" id="shelflabel" placeholder="" />
                              </td>
                            </tr>
                          </tbody>

                        </table>


                        <table class="table table-bordered">
                          <thead>
                            <tr>

                              <th style="width: 12vw;">Batch <span style="font-size: 20px; color: red">*</span></th>
                              <th style="width: 6vw;">Exp Date <span style="font-size: 20px; color: red">*</span></th>


                              <th style="width: 6vw;" id="primaryunitname">P.Unit<span></span></th>
                              <th style="width: 6vw;" id="secondaryunitname">S.Unit<span></span></th>
                              <th style="width: 5vw;">MRP / p.unit</th>

                              <th style="width: 8vw;">Disc %</th>
                              <th style="width: 10vw;">Total</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>

                              <td id="batchdroporinput">
                                <input type="text" class="form-control" id="batch" placeholder="" />
                              </td>

                              <td>
                                <input class="form-control" type="date" id="expdate" />
                              </td>

                              <td>
                                <input type="number" class="form-control px-1" id="pUnit" min="0" />
                              </td>

                              <td>
                                <input type="number" class="form-control px-1" id="sUnit" min="0" />
                              </td>

                              <td>
                                <input type="text" class="form-control" id="price" placeholder="" min="0" />
                              </td>

                              <td>
                                <input type="text" class="form-control" id="discount" placeholder="" min="0" />
                              </td>

                              <td>
                                <input type="text" class="form-control" id="total" placeholder="" min="0" />
                              </td>
                            </tr>

                          </tbody>

                        </table>
                      </div>
                    </div>
                    <div class="buttonBox text-center pb-3">
                      <btn class="btn btn-primary" style="color: white;" id="addtocart">Add to
                        Cart</btn>
                      <input type="reset" class="btn btn-primary" style="color: white;" value="Clear" />
                    </div>
                  </form>
                </div>

                <!--/ Bordered Table -->


                <!-- Product Cart -->
                <div class="card mx-0">
                  <h5 class="card-header">Cart</h5>
                  <div class="card-body">
                    <div class="table-responsive text-nowrap">
                      <table class="table table-bordered">
                        <thead>
                          <tr>
                            <th class="col-1">#</th>
                            <th class="col-7">Product name</th>
                            <th class="col-1" id="priqtycart">PQty</th>
                            <th class="col-1" id="secqtycart">SQty</th>
                            <th class="col-1">MRP/PUnit</th>
                            <th class="col-1">Disc %</th>
                            <th class="col-1">Total</th>
                            <th class="col-1">Action</th>

                          </tr>
                        </thead>
                        <tbody id="cart">
                          <!-- <tr>
                            <td>1</td>
                            <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>Calpol 1000mg
                                Tablet</strong></td>
                            <td>3</td>
                            <td>35</td>
                            <td>5</td>
                            <td>115</td>
                            <td>
                              <div class="action-btns">
                                <button type="button" class="btn p-0 mx-2"><i class='bx bxs-edit'></i></button>
                                <button type="button" class="btn p-0 mx-2"><i class="bx bx-trash me-1"></i></button>
                              </div>
                            </td>
                          </tr> -->


                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>

                <!-- / Product Cart -->
              </div>

              <hr>

              <div class="row mx-3">



                <div class="d-flex row m-0 p-0">
                  <h4 class="col-sm-7 fw-bold py-3 mb-4">Order Summary</h4>
                  <div class="col-sm-5">
                    <div class="mb-1 row">

                      <label for="reference" class="col-3 form-label mb-0"><span
                          style="font-size: 20px; color: red">*</span>Reference</label>
                      <div class="col-9 mb-2">
                        <input class="form-control" type="text" placeholder="Doctor/Hospital" id="reference" />
                      </div>
                    </div>
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="card mb-4">
                    <h5 class="card-header"> Subtotal</h5>
                    <div class="card-body">
                      <div>

                        <input type="text" class="form-control" id="subtotal"
                          aria-describedby="defaultFormControlHelp" />

                      </div>
                    </div>
                  </div>
                </div>


                <div class="col-md-3">
                  <div class="card mb-4">
                    <h5 class="card-header">Additional Discount (₹)</h5>
                    <div class="card-body">
                      <div>

                        <input type="text" class="form-control" id="additionaldiscount"
                          aria-describedby="defaultFormControlHelp" />

                      </div>
                    </div>
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="card mb-4">
                    <div class="d-flex justify-content-between m-0 p-0">
                      <h5 class="card-header">Final Amount</h5>
                    </div>

                    <div class="card-body pt-0">
                      <div>

                        <input type="text" class="form-control" id="finalamount"
                          aria-describedby="defaultFormControlHelp" />

                      </div>
                    </div>
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="card mb-4">
                    <h5 class="card-header">Mode of Payment</h5>
                    <div class="card-body">
                      <div>
                        <select class="form-select" id="mop" name="mop" aria-label="select mop">
                          <option selected disabled>Select Option</option>
                          <option value="cash">Cash</option>
                          <option value="upi">UPI</option>
                          <option value="debit-card">Debit card</option>
                          <option value="credit-card">Credit card</option>
                        </select>

                      </div>
                    </div>
                  </div>
                </div>

              </div>
              <!-- / Content -->

              <div class="mb-4">
                <div class="form-check mt-3">
                  <div>
                    <input class="form-check-input mx-auto" type="checkbox" value="" id="defaultCheck1" checked>
                    <label class="form-check-label mx-1" for="defaultCheck1">
                      Disclaimer : Hereby I asure that product details given here is
                      validated by this pharmacy .
                    </label>
                  </div>
                </div>
              </div>

              <!-- //invoice_template -->
              <div class="text-center mb-4">
                <a>
                  <div class="btn btn-primary px-5" id="submitorder">Submit</div>
                </a>
              </div>




              <div class="content-backdrop fade"></div>
          </div>
          <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>



    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>


    </div>
    <!-- / Layout wrapper -->

    <%- include('../partials/footercode.ejs') %>
      <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
      <script>

        var customerData = [];// to push all the details of customer data in this array

        var cartarray = [];// push all the items of a particular customer

        var autoCompleteDataNumber = [];// used for autocomplete number field
        var autoCompleteDataName = [];// used for autocomplete name field


        $(document).ready(function () {

          if ('caches' in window) {
            caches.keys().then(name => {
              if (name.length == 0) {
                console.log('do something');
                caches.open('productCache').then((cache) => {
                  cache.add('/api/allsample');
                })
              }
              else {
                console.log('do nothing');
              }
            })
          }


          //gettin the current org id

          var org = "<%= orgId %>";

          // get customer data and show it in the autocomplete function

          $.get(`/api/custorg/${org}`, function (data, status) {

            for (let i in data.data) {
              customerData.push({
                phone: JSON.stringify(data.data[i].cust_telephone),
                name: data.data[i].cust_name,
                id: data.data[i].customer_id
              });

              autoCompleteDataNumber.push({
                label: JSON.stringify(data.data[i].cust_telephone) + '(' + data.data[i].cust_name + ')',
                value: JSON.stringify(data.data[i].cust_telephone)
              });

              autoCompleteDataName.push({
                label: data.data[i].cust_name + '(' + JSON.stringify(data.data[i].cust_telephone) + ')',
                value: data.data[i].cust_name
              });
            }

            // if phonenumber is typed
            if ($("#phonenumber").focus()) {

              $("#phonenumber").autocomplete({
                source: autoCompleteDataNumber,
                select: function (event, ui) {

                  selectedCustomerNumber = (ui.item.label);
                  var autopopulatedName = selectedCustomerNumber.match(/\(([^)]+)\)/)[1];

                  $("#customername").val(autopopulatedName);
                }
              })
            }
            // end of number logic

            //if name is typed
            if ($("#customername").focus()) {

              $("#customername").autocomplete({
                source: autoCompleteDataName,
                select: function (event, ui) {

                  selectedCustomerName = (ui.item.label);
                  var autopopulatedNumber = selectedCustomerName.match(/\(([^)]+)\)/)[1];

                  $("#phonenumber").val(autopopulatedNumber);
                }
              })
            }
            //end of name logic

          })
          //end of autocomplete function

          //start of product cart 
          var product = [];
          var productId = -1;
          /*
                    $.get('/product/', function (data, status) {
          
                      for (let i in data.data) {
                        product.push({
                          label: `${data.data[i].product_id}. ${data.data[i].product_name}`,
                          value: data.data[i].product_name
                        })
                      }
          
          
                      $("#medicinename").autocomplete({
                        source: product,
                        select: function (event, ui) {
          
                          selectedProductName = (ui.item.label);
                          const regex = /^(\d+)\./;
                          const match = selectedProductName.match(regex)
                          productId = match[1];
          
                          $.get(`/api/product/${productId}`, function (data, status) {
                            var selectedProduct = data.data;
                            $("#brand").val(selectedProduct.mfg);
                            $("#price").val(selectedProduct.mrp);
                            $("#discount").val(0);
                          })
                        }
                      })
                    })
          */

          /* $('#medicinename').autocomplete({
             minLength: 3,
             source: function(request, response) {
               $.get(`/api/sampledetails?med=${request.term}`, function(data) {
                 response(data.data);
               });
             },
             select: function(event, ui) {
               setTimeout(function(){
                 console.log(ui.item);
                 $("#medicinename").val(ui.item.med_name);
                 $('#price').val(ui.item.mrp);
                 $('#brand').val(ui.item["mfd/mkt"]);
                 $("#pack .unit").text(ui.item.pack_size);
               },0)
             }
           }).data('ui-autocomplete')._renderItem = function(ul, item) {
             return $('<li>')
               .append('<div>' + item.med_name + '</div>')
               .appendTo(ul);
           };*/

          var priceMed = -1;
          var primaryUnit;
          var secondaryUnit;
          var conversion;
          //var batchesMap=[];
          var batchIdwhenSelected;
          var availablePrimaryQty;
          var availableSecondaryQty;
          $('#medicinename').autocomplete({
            minLength: 3,
            source: function (request, response) {
              if ('caches' in window) {
                caches.match(`/api/allsample`).then(res => {
                  if (res) {
                    res.json().then(data => {
                      let searchTerm = request.term;
                      let results = data.result.filter(item => item.med_name.toLowerCase().includes(searchTerm.toLowerCase())).slice(0, 10);
                      if (results.length === 0) {
                        results.push({ med_name: null }); // Add a null item for the custom message

                      }

                      response(results);
                    })
                  }
                });
              }
              else {
                $.get('/api/allsample', function (data, status) {
                  let searchTerm = request.term;
                  let results = data.result.filter(item => item.med_name.toLowerCase().includes(searchTerm.toLowerCase())).slice(0, 10);
                  if (results.length === 0) {
                    results.push({ med_name: null }); // Add a null item for the custom message
                  }
                  response(results);
                })
              }

            },
            select: function (event, ui) {
              setTimeout(function () {
                console.log('the selected med', ui.item);
                productId = ui.item.sample_id;

                //getting all the batches associated with the product
                $.get(`/api/getbatch?id=${productId}&org=<%=orgId%>`, function (data, status) {

                  console.log('all batches', data.data);
                  if (data.data.length == 0) {
                    $("#message").html(`<h5 class="my-auto" style="color:red"> ITEM NOT IN INVENTORY PLEASE ADD!!</h5>
                                        <div class=" text-center">
                                            <a class="btn btn-primary mx-4" style="color: white;" href="/add_product">+ Add Product</a>
                                        </div>`);
                  } else {
                    //batch dropdown
                    $("#batchdroporinput input").remove();
                    $("#batchdroporinput").append(
                      `
                      <select class="form-select" id="batchnumber" aria-label="unit">
                      </select>
                      `
                    )

                    data.data.map(function (value, key) {
                      //batchesMap.push(`${value.batch_id} ( ${value.batch_qty} )`);
                      var remPriQty = value.batch_qty - value.saled_pri_qty;
                      var remSecQty = (value.conversion - value.saled_sec_qty) == value.conversion ? 0 : value.conversion - value.saled_sec_qty;
                      $("#batchdroporinput #batchnumber").append(
                        `<option value=${key}> ${value.batch_name} ( ${remPriQty}:${remSecQty} ) </option>`
                      )
                    })
                    //console.log(batchesMap);
                  }
                  //populate the first qty to the product cart
                  batchIdwhenSelected = data.data[0].batch_id;
                  primaryUnit = data.data[0].primary_unit;
                  secondaryUnit = data.data[0].secondary_unit;
                  conversion = data.data[0].conversion;

                  availablePrimaryQty = data.data[0].batch_qty - data.data[0].saled_pri_qty;
                  availableSecondaryQty = (data.data[0].conversion - data.data[0].saled_sec_qty) == data.data[0].conversion ? 0 : data.data[0].conversion - data.data[0].saled_sec_qty;



                  /*
                  $("#unit").append("<option>"+ data.data[0].primary_unit+ "</option>");
                  $("#unit").append("<option>"+data.data[0].secondary_unit + "</option>");
                  $("#pack .unit")
                  .text(`1 ${data.data[0].primary_unit} of ${data.data[0].conversion} ${data.data[0].secondary_unit}`);
                  */

                  $("#primaryunitname span").text(` (${primaryUnit})`);
                  $("#secondaryunitname span").text(` (${secondaryUnit})`);

                  //exp date populate and shelf label
                  var date = new Date(data.data[0].exp_date);
                  $("#expdate").val(date.toISOString().split('T')[0]);
                  $("#shelflabel").val(data.data[0].shelf_label);

                  $("#batch").val(data.data[0].batch_id);
                  priceMed = data.data[0].mrp;
                  $("#price").val(priceMed);
                  //var batchId = $("#batchdroporinput #batchnumber").val();
                  //$("#batchdroporinput #batchstock").text(`Stock: ${data.data[batchId].batch_qty}`)

                  $("#batchdroporinput").on("change", "#batchnumber", function () {
                    var batchId = $("#batchdroporinput #batchnumber").val();
                    batchIdwhenSelected = data.data[batchId].batch_id;

                    $("#shelflabel").val(data.data[batchId].shelf_label);
                    var date = new Date(data.data[batchId].exp_date);
                    $("#expdate").val(date.toISOString().split('T')[0]);
                    $("#price").val(data.data[batchId].mrp);
                    conversion = data.data[batchId].conversion;

                    availablePrimaryQty = data.data[batchId].batch_qty - data.data[batchId].saled_pri_qty;
                    availableSecondaryQty = (data.data[batchId].conversion - data.data[batchId].saled_sec_qty) == data.data[batchId].conversion ? 0 : data.data[batchId].conversion - data.data[batchId].saled_sec_qty;

                    calculateTotal();
                  })

                })

                $("#medicinename").val(ui.item.med_name);
                $('#brand').val(ui.item["mfd/mkt"]);
              }, 0)
            }
          }).data('ui-autocomplete')._renderItem = function (ul, item) {

            if (item.med_name) {

              return $('<li>')
                .append('<div>' + item.med_name + '(' + item.salt_composition + ')' + '</div>')
                .appendTo(ul);
            }
            else {
              return $('<li>').append('<div>No matching products found</div>').appendTo(ul);
            }

          };

          //logic for selected units (discontinued)
          /*
        $("#unit").change(function(){
          var getUnit = $(this).val();
          if(getUnit === primaryUnit){
            $("#price").val(priceMed);
            calculateTotal();
          }
          else{
            $("#price").val(priceMed/conversion);
            calculateTotal();
          }
        })*/

          //logic for calculating total
          var priQty = $("#pUnit");
          var secQty = $("#sUnit");
          var priceInput = $("#price");
          var discInput = $("#discount");
          var totalInput = $("#total");

          priQty.on("input", calculateTotal);
          secQty.on("input", calculateTotal);
          discInput.on("input", calculateTotal);

          function calculateTotal() {
            var primaryqty = parseInt(priQty.val()) || 0;
            var secondaryqty = parseInt(secQty.val()) || 0;
            var price = parseFloat(priceInput.val()) || 0;
            var discount = parseFloat(discInput.val()) || 0;
            discount = discount / 100;

            //var total = quantity * price - (quantity * price * discount);
            var totalQtyBeforeDisc = primaryqty * price + secondaryqty * price / conversion;
            var totalQtyAfterDisc = totalQtyBeforeDisc - (totalQtyBeforeDisc * discount);

            totalInput.val(totalQtyAfterDisc.toFixed(2));
          }

          //getting data when refresh
          var cartItems = JSON.parse(localStorage.getItem('cartitems')) || [];
          var custDataLocal = JSON.parse(localStorage.getItem('custdata')) || [];

          if (cartItems.length != 0) {
            $("#customername").val((custDataLocal.name));
            $("#phonenumber").val((custDataLocal.phone));
          }
          else {
            $("#subtotal").val(0);
            $("#additionaldiscount").val(0);
            $("#finalamount").val(0);
          }

          renderRefreshCart(cartItems);

          function renderRefreshCart(items) {
            $('#cart').empty();

            for (var i = 0; i < items.length; i++) {
              cartarray.push(items[i]);

              htmlData = `
              <tr>
                <td class="card_id">${i + 1}</td>
                <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>${items[i].productname}</strong></td>
                <td>${items[i].priQty}</td>
                <td>${items[i].secQty}</td>
                <td>${items[i].mrp}</td>
                <td>${items[i].disc}</td>
                <td>${items[i].total}</td>
                <td>
                  <div class="action-btns">
                    <button type="button" id="edit-button" class="edit-button btn p-0 mx-2"><i class='bx bxs-edit'></i></button>
                    <button type="button" class="delete-button btn p-0 mx-2"><i class="bx bx-trash me-1"></i></button>
                  </div>
                </td>
              </tr>
                        `
              $('#cart').append(htmlData);
            }
          }
          //end of logic for refresh data


          var setLocalData;
          var getLocalData;
          var htmlData;
          $("#addtocart").click(function () {

            if ($("#customername").val() == '') {
              return alert('Please fill "Customer Details"');
            }

            if ($("#medicinename").val() == '') {
              return alert('Enter "Medicine Name"');
            }

            if ($("#pUnit").val() == '') {
              return alert('Enter Quantity');
            }

            if ($("#batch").val() == '') {
              return alert('Select Batch');
            }

            if ($("#expdate").val() < new Date().toJSON().slice(0, 10)) {
              return alert("Can't proceed with Expired product");
            }

            if (priQty.val() > availablePrimaryQty) {
              return alert("Don't have Enough Quantity!");
            }
            if (priQty.val() == availablePrimaryQty) {
              if (secQty.val() > availableSecondaryQty)
                return alert("Don't have Enough Quantity!");
            }

            var products = $("#medicinename").val();
            var brand = $("#brand").val();
            var priCartQty = priQty.val();
            var secCartQty = secQty.val();
            var mrp = priceInput.val();
            var disc = discInput.val();
            var total = totalInput.val();
            var shelflabel = $("#shelflabel").val();
            var batch = $("#batchdroporinput #batchnumber").val();
            var exp = $("#expdate").val();
            var selectedUnit = $("#unit").val();



            cartarray.push({
              batchId: batchIdwhenSelected,
              productId: productId,
              productname: products,
              brand: brand,
              shelflabel: shelflabel,
              batch: batch,
              expdate: exp,
              priQty: priCartQty,
              secQty: secCartQty,
              conversion: conversion,
              selectedUnit: selectedUnit,
              mrp: mrp,
              disc: disc,
              total: total,
              timestamp: new Date().getTime()
            })

            setLocalData = JSON.stringify(cartarray);

            localStorage.setItem("cartitems", setLocalData);

            //also add the customer data to local storage
            var storeCustomerData = {
              name: $("#customername").val(),
              phone: $("#phonenumber").val()
            };

            localStorage.setItem("custdata", JSON.stringify(storeCustomerData));

            $("#medicinename").val("");
            $("#brand").val("");
            $("#pUnit").val("");
            $("#sUnit").val("");
            $("#price").val("");
            $("#discount").val("");
            $("#total").val("");
            $("#shelflabel").val("");
            $("#batchdroporinput").empty();
            $("#batchdroporinput").append(`<input type="text" class="form-control" id="batch" placeholder="" />`)
            $("#expdate").val("");
            $("#unit").empty();
            $("#pack .unit").empty();
            $("#message").empty();
          })

          $("#medicinename").on('input', function () {
            $("#brand").val("");
            $("#pUnit").val("");
            $("#sUnit").val("");
            $("#price").val("");
            $("#discount").val("");
            $("#total").val("");
            $("#shelflabel").val("");
            $("#batchdroporinput").empty();
            $("#batchdroporinput").append(`<input type="text" class="form-control" id="batch" placeholder="" />`)
            $("#expdate").val("");
            $("#unit").empty();
            $("#pack .unit").empty();
            $("#message").empty();
          })

          // logic for redering cart data on addtocart click 
          $("#addtocart").on('click', function () {
            cartItems = JSON.parse(localStorage.getItem('cartitems')) || [];
            renderCart(cartItems);
            getSubTotal();
          });

          //deletefunctionality
          $("#cart").on("click", ".delete-button", function () {
            var item = $(this).closest("tr");
            var item_id = item.find(".card_id").text().trim();
            var cartItemsinStorage = JSON.parse(localStorage.getItem('cartitems')) || [];
            cartItemsinStorage.splice(item_id - 1, 1);
            cartarray = cartItemsinStorage;
            localStorage.setItem('cartitems', JSON.stringify(cartItemsinStorage));
            renderCart(cartItemsinStorage);
          });
          //endofdeletefunctionality


          //edit functionality  
          $("#cart").on("click", ".edit-button", function () {
            var item = $(this).closest("tr");
            var item_id = item.find(".card_id").text().trim();
            var UpdatecartItemsinStorage = JSON.parse(localStorage.getItem('cartitems')) || [];
            var selectedItem = UpdatecartItemsinStorage[item_id - 1];
            productId = selectedItem.productId;
            $("#medicinename").val(selectedItem.productname);
            $("#brand").val(selectedItem.brand);
            $("#pUnit").val(selectedItem.priQty);
            $("#sUnit").val(selectedItem.secQty);
            $("#price").val(selectedItem.mrp);
            $("#discount").val(selectedItem.disc);
            $("#total").val(selectedItem.total);



            //getting all data for batches
            $.get(`/api/getbatch?id=${productId}&org=<%=orgId%>`, function (data, status) {
              console.log('on edit of the product', data.data);
              if (data.data.length == 0) {
                $("#message").text(`ITEM NOT IN INVENTORY PLEASE ADD!!`);
              } else {
                //batch dropdown
                $("#batchdroporinput input").remove();
                $("#batchdroporinput").append(
                  `
                      <select class="form-select" id="batchnumber" aria-label="unit">
                      </select>
                      `
                )

                data.data.map(function (value, key) {
                  //batchesMap.push(`${value.batch_id} ( ${value.batch_qty} )`);
                  $("#batchdroporinput #batchnumber").append(
                    `<option value=${key}> ${value.batch_name} ( ${value.batch_qty} ) </option>`
                  )
                })
                //console.log(batchesMap);
              }
              //populate the first qty to the product cart
              var batchnumber = selectedItem.batch;
              batchIdwhenSelected = selectedItem.batchId;
              $("#batchdroporinput #batchnumber").prop('selectedIndex', batchnumber);
              primaryUnit = data.data[batchnumber].primary_unit;
              secondaryUnit = data.data[batchnumber].secondary_unit;
              conversion = data.data[batchnumber].conversion;

              $("#primaryunitname span").text(` (${primaryUnit})`);
              $("#secondaryunitname span").text(` (${secondaryUnit})`);

              //exp date populate and shelf label
              var date = new Date(data.data[batchnumber].exp_date);
              $("#expdate").val(date.toISOString().split('T')[0]);
              $("#shelflabel").val(data.data[batchnumber].shelf_label);

              //$("#batch").val(data.data[0].batch_id);
              priceMed = data.data[batchnumber].mrp;
              $("#price").val(priceMed);

              $("#batchdroporinput").on("change", "#batchnumber", function () {
                var batchId = $("#batchdroporinput #batchnumber").val();
                batchIdwhenSelected = data.data[batchId].batch_id;

                $("#shelflabel").val(data.data[batchId].shelf_label);
                var date = new Date(data.data[batchId].exp_date);
                $("#expdate").val(date.toISOString().split('T')[0]);
                $("#price").val(data.data[batchId].mrp);
                conversion = data.data[batchId].conversion;
                calculateTotal();
              })


            })

            //$("#shelflabel").val(selectedItem.shelflabel);
            //$("#expdate").val(selectedItem.expdate);
            /* if(selectedItem.selectedUnit){
 
               $("#unit").append("<option>"+ selectedItem.selectedUnit+"</option>");
               if(selectedItem.primaryUnit === selectedItem.selectedUnit){
                 $("#unit").append("<option>"+ selectedItem.secondaryUnit + "</option>");
               }
               else{
                 $("#unit").append("<option>"+ selectedItem.primaryUnit + "</option>");
               }
               
               $("#pack .unit")
               .text(`1 ${selectedItem.primaryUnit} of ${selectedItem.conversion} ${selectedItem.secondaryUnit}`);
             }*/

            UpdatecartItemsinStorage.splice(item_id - 1, 1);
            cartarray = UpdatecartItemsinStorage;
            localStorage.setItem('cartitems', JSON.stringify(UpdatecartItemsinStorage));
            renderCart(UpdatecartItemsinStorage);


          })
          //end of edit functionality

          //rendercart functionality
          function renderCart(items) {
            $('#cart').empty();

            for (var i = 0; i < items.length; i++) {
              htmlData = `
                          <tr>
                            <td class="card_id">${i + 1}</td>
                            <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>${items[i].productname}</strong></td>
                            <td>${items[i].priQty}</td>
                            <td>${items[i].secQty}</td>
                            <td>${items[i].mrp}</td>
                            <td>${items[i].disc}</td>
                            <td>${items[i].total}</td>
                            <td>
                              <div class="action-btns">
                                <button type="button" id="edit-button" class="edit-button btn p-0 mx-2"><i class='bx bxs-edit'></i></button>
                                <button type="button" class="delete-button btn p-0 mx-2"><i class="bx bx-trash me-1"></i></button>
                              </div>
                            </td>
                          </tr>
                          `
              $('#cart').append(htmlData);
            }
          }
          //end of rendereing data logic


          //implementing time after which cart clears itself
          function checkExpiration() {
            var data = JSON.parse(localStorage.getItem('cartitems')) || [];

            if (data.length != 0) {
              var currentTime = new Date().getTime();
              var last = data[data.length - 1].timestamp;
              if (data && (currentTime - last) >= (60 * 60 * 1000)) {
                console.log("expired");
                localStorage.removeItem('cartitems');
                localStorage.removeItem('custdata');
              }
            }
          }

          checkExpiration();
          /*
                      setTimeout(function() {
                        console.log("checking");
                        checkExpiration();
                      }, 3600000);
          */
          //end of this function


          //getting the subtotal when theres change in local storage
          var getAllData = JSON.parse(localStorage.getItem("cartitems")) || [];
          getSubTotal();
          $("#cart").on("click", ".delete-button, .edit-button", function () {
            getSubTotal();
          })

          function getSubTotal() {

            var subtotal = 0;
            getAllData = JSON.parse(localStorage.getItem("cartitems")) || [];

            if (getAllData.length != 0) {

              for (let i = 0; i < getAllData.length; i++) {
                subtotal = subtotal + parseFloat(getAllData[i].total);
              }

              $("#subtotal").val(subtotal.toFixed(2));
              $("#finalamount").val(subtotal.toFixed(0));
            }
            else if (getAllData.length == 0) {
              // console.log("none");
              $("#subtotal").val(0);
              $("#finalamount").val(0);
            }
          }


          $('#additionaldiscount').on("input", function () {

            var getSubTotalValue = $("#subtotal").val()
            var discountInput = $(this).val();
            var discountprice = getSubTotalValue - discountInput;
            $("#finalamount").val(discountprice.toFixed(0));

          })
          //allchanges done for footer total;


          // post the data to the sales api
          var orderDetails;
          $("#submitorder").click(function () {

            if ($("#reference").val() == "") {
              return alert("NO DOCTOR REF");
            }
            if ($("#subtotal").val() == 0 || $("#subtotal").val() == '') {
              return alert("PLEASE ADD SOME ITEMS FIRST");
            }


            var subtotal = $("#subtotal").val();
            var total_dist = $("#additionaldiscount").val() || 0;
            var grand_total = $("#finalamount").val();
            var mop = $("#mop").val();

            var customerNumber = $("#phonenumber").val();
            var customerName = $("#customername").val();

            $.ajax({
              url: `/api/custnumber/`,
              type: 'POST',
              data: JSON.stringify({
                cust_name: customerName,
                org_id: org,
                cust_telephone: customerNumber
              }),
              contentType: 'application/json',
              success: function (response) {
                var pharmacyDetails = JSON.parse(localStorage.getItem('name'));

                var customerId = response.id;

                orderDetails = {
                  org_id: org,
                  customer_id: customerId,
                  subtotal: subtotal,
                  total_dist: total_dist,
                  grand_total: grand_total,
                  mop: mop,
                  pharmacyId: pharmacyDetails.pharmaId,
                  doctor_name: $("#reference").val()
                }


                $.ajax({
                  url: '/api/salesdetail/',
                  type: 'POST',
                  data: JSON.stringify(orderDetails),
                  contentType: 'application/json',
                  success: function (response) {
                    console.log('inside the submit function', response);
                    var salesId = response.result.insertId;
                    var mainInvoiceId = response.invoiceId;

                    var orderDetails = JSON.parse(localStorage.getItem("cartitems"));
                    console.log('orderdetails of sales', orderDetails);

                    for (let i in orderDetails) {

                      $.ajax({
                        url: `/api/updatebatchwhensale/`,
                        type: 'POST',
                        data: JSON.stringify({
                          batch_id: orderDetails[i].batchId,
                          org_id: org,
                          saled_pri_qty: orderDetails[i].priQty,
                          saled_sec_qty: orderDetails[i].secQty
                        }),
                        contentType: 'application/json',
                        success: function (response) {
                          console.log(response);
                        },
                        error: function (error) {
                          console.log('error in updateing batch', error);
                        }
                      })



                      var cartDetails = ({
                        product_id: orderDetails[i].productId,
                        saled_pri_qty: orderDetails[i].priQty,
                        saled_sec_qty: orderDetails[i].secQty,
                        main_invoice_id: mainInvoiceId,
                        sales_invoice_id: salesId,
                        saled_batch_id: orderDetails[i].batchId,
                        unit_discount: orderDetails[i].disc,
                        saled_mrp: orderDetails[i].total
                      })

                      console.log('cartDetail for the saled product', cartDetails);

                      $.ajax({
                        url: `/api/cartitems/`,
                        type: 'POST',
                        data: JSON.stringify(cartDetails),
                        contentType: 'application/json',
                        success: function (response) {
                          console.log(response);
                        },
                        error: function (error) {
                          console.log(error);
                        }
                      })
                    }

                    localStorage.removeItem("cartitems");
                    localStorage.removeItem("custdata");
                    window.location.href = `/sale_receipt/${salesId}`

                    //})
                  },
                  error: function (error) {
                    alert("not Created", error)
                  }
                })
              },
              error: function (error) {
                alert("not Created", error)
              }


            })


          })

          // if wanted without using local storage edit and delete button
          /*
                        var newRow = $("<tr>");
                        newRow.addClass("cart-item");
          
                          var index = $("<td>").addClass("index").text(i);
                          var productName = $("<td>").addClass("updateproduct").text(products);
                            var qtys = $("<td>").addClass("updateqty").text(qty);
                            var mrps = $("<td>").addClass("updateprice").text(mrp);
                            var discs = $("<td>").addClass("updatedisc").text(disc);
                            var totals = $("<td>").addClass("updatetotal").text(total);
                           
                         
                            var actionButtons = $("<div>").addClass("action-btns");
                            var editButton = $("<button>").addClass("edit-button btn p-0 mx-2").attr("type", "button").html("<i class='bx bxs-edit'></i>");
                            var deleteButton = $("<button>").addClass("delete-button btn p-0 mx-2").attr("type", "button").html("<i class='bx bx-trash me-1'></i>");
          
                            actionButtons.append(editButton, deleteButton);
          
                          newRow.append(index, productName, qtys,mrps, discs, totals, $("<script>").append(actionButtons));
                          $("#cart").append(newRow);
          */




          //deleting an item


          //item.remove();
          /*
                          $("#cart").on("click", ".edit-button", function(){
                              var updateElement = $(this).closest("tr")
                              var productName = updateElement.find(".updateproduct").text().trim();
                              var qtyUpdate = updateElement.find(".updateqty").text().trim();
                              var priceUpdate = updateElement.find(".updateprice").text().trim();
                              var discUpdate = updateElement.find(".updatedisc").text().trim();
                              var totalUpdate = updateElement.find(".updatetotal").text().trim();
                              
                          $("#medicinename").val(productName);
                          $("#qty").val(qtyUpdate);
                          $("#price").val(priceUpdate);
                          $("#discount").val(discUpdate);
                          $("#total").val(totalUpdate);
                          
                          
                          updateElement.remove();
                        }) 
                        */
        })

      </script>

  </body>


  </html>